<?php

/**
 * @file
 * Hooks and callbacks for this module.
 */

define('UPEI_ROBLIB_ORCID_BLOCK', 'upei_roblib_orcid_block');
define('UPEI_ROBLIB_ORCID_CALLBACK_URI', 'islandora/orcid/response');

/**
 * Implements hook_menu().
 */
function upei_roblib_orcid_menu() {
  $items = array();

  $items['admin/islandora/orcid'] = array(
    'title' => 'ORCID',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('upei_roblib_orcid_admin_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/upei_roblib_orcid.admin.form.inc',
  );

  $items[UPEI_ROBLIB_ORCID_CALLBACK_URI] = array(
    'title' => 'ORCID',
    'page callback' => 'upei_roblib_orcid_response',
    'page arguments' => array(3),
    'access callback' => 'upei_roblib_orcid_response_access',
    'type' => MENU_LOCAL_TASK,
    'file' => 'includes/upei_roblib_orcid.response.inc',
  );

  return $items;
}

/**
 * Implements hook_access().
 */
function upei_roblib_orcid_response_access() {
  return TRUE;
  /*
  Currently UPEI does not want scholars to be able to edit their Scholar
  profile, but does want them to be able to add an ORCID iD to their MADS.
  So for now let them use this module to add their ORCID iD without a
  permission check.
  */

  /*
  $pid = upei_roblib_orcid_get_user_entity();
  $user_object = islandora_object_load($pid);
  return islandora_user_access($user_object, array(ISLANDORA_METADATA_EDIT));
  */
}


/**
 * Implements hook_form().
 */
function upei_roblib_orcid_create_or_connect_form($form, &$form_state, $object_id = NULL) {
  $form['#prefix'] = '<div id="upei-roblib-orcid-form">';
  $form['#suffix'] = '</div>';
  $object = islandora_object_load($object_id);
  $mads_xml = empty($object['MADS']->content) ? '' : $object['MADS']->content;
  $can_connect = upei_roblib_orcid_needs_orcid_id($mads_xml);
  $form['needs_orcid_id'] = array(
    '#type' => 'hidden',
    '#default_value' => $can_connect,
  );
  $form['start_message'] = array(
    '#type' => 'item',
    '#markup' => variable_get('upei_roblib_orcid_start_message'),
    '#attributes' => array('class' => array('upei-roblib-orcid-start-message')),
    '#states' => array(
      'visible' => array(
        ':input[name="needs_orcid_id"]' => array('value' => '1'),
      ),
    ),
  );
  $form['connect_button'] = array(
    '#type' => 'submit',
    '#value' => 'Create or connect your ORCID iD',
    '#attributes' => array('class' => array('upei-roblib-orcid-connect-button')),
    '#states' => array(
      'visible' => array(
        ':input[name="needs_orcid_id"]' => array('value' => '1'),
      ),
    ),
  );
  return $form;
}

/**
 * Checks to see if this Object can have an ORCID iD added to it.
 *
 * @param string $mads_xml
 *   The objects existing MADS xml as a string.
 *
 * @return bool
 *   Returns TRUE if we can add an ORCID iD to this object, FALSE otherwise.
 */
function upei_roblib_orcid_needs_orcid_id($mads_xml) {
  if (empty($mads_xml)) {
    // MADS does not exist we won't be able to add an orcid iD.
    return FALSE;
  }
  $xml = new DOMDocument();
  $test = $xml->loadXML($mads_xml);
  if (empty($test)) {
    // Problem parsing mads we won't be able to add an id.
    return FALSE;
  }
  $query = "//mads:identifier[@type='orcid']";
  $xpath = new DOMXPath($xml);
  $xpath->registerNamespace('mads', 'http://www.loc.gov/mads/v2');
  $results = $xpath->query($query, $xml);
  $found = (bool) $results->length;
  return !$found;
}

/**
 * Send the user to ORCID to start the process of getting an ORCID iD.
 *
 * @param array $form
 *   The Drupal form.
 * @param array $form_state
 *   The Drupal form state.
 */
function upei_roblib_orcid_create_or_connect_form_submit($form, &$form_state) {
  module_load_include('inc', 'upei_roblib_orcid', 'includes/upei_roblib_orcid.object');
  $path = variable_get('upei_roblib_orcid_oauth_auth_endpoint');
  $client_id = variable_get('upei_roblib_orcid_oauth_client_id');
  $redirect_url = url(NULL, array('absolute' => TRUE)) . UPEI_ROBLIB_ORCID_CALLBACK_URI . '/';
  $scholar_details = upei_roblib_orcid_get_scholars_details();
  $options = array(
    'query' => array(
      'client_id' => $client_id,
      'response_type' => 'code',
      'scope' => '/authenticate',
      'redirect_uri' => $redirect_url,
      'email' => empty($scholar_details['email']) ? '' : $scholar_details['email'],
      'given_names' => empty($scholar_details['given_names']) ? '' : $scholar_details['given_names'],
      'family_names' => empty($scholar_details['family_names']) ? '' : $scholar_details['family_names'],
    ),
    'absolute' => TRUE,
  );
  $url = url($path, $options);
  drupal_goto($url);
}

/**
 * Implements hook_block_info().
 */
function upei_roblib_orcid_block_info() {
  $blocks[UPEI_ROBLIB_ORCID_BLOCK] = array(
    'info' => t('Islandora Orcid Integration'),
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function upei_roblib_orcid_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case UPEI_ROBLIB_ORCID_BLOCK:
      $block['subject'] = t('Islandora Orcid Integration');
      $user_pid = upei_roblib_orcid_get_user_entity();
      $form = drupal_get_form('upei_roblib_orcid_create_or_connect_form', $user_pid);
      $block['content'] = $form;
      break;
  }
  return $block;
}

/**
 * Implements hook_init().
 */
function upei_roblib_orcid_init() {
  drupal_add_js(array(
    'upei_roblib_orcid' => array(
      'orcid_logout_url' =>
      variable_get('upei_roblib_orcid_logut_url',
        'https://orcid.org/userStatus.json?logUserOut=true'),
    ),
  ), 'setting');
  drupal_add_js(drupal_get_path(
      'module', 'upei_roblib_orcid') . '/js/upei_roblib_orcid.js');
}

/**
 * Searches for an Islandora Person Entity object matching the Drupal username.
 *
 * @return string
 *   The PID of the matching user if they exist, otherwise NULL.
 */
function upei_roblib_orcid_get_user_entity() {
  $qualifier = variable_get('upei_roblib_orcid_mads_user_field', 'MADS_u1_ms');
  global $user;
  module_load_include('inc', 'islandora_solr', 'includes/utilities');
  if (empty($user->name)) {
    watchdog('UPEI Roblib Orcid', 'Error searching for user id, user name does not exist.', array(), WATCHDOG_ERROR);
    return NULL;
  }
  $user_name = islandora_solr_lesser_escape($user->name);
  $params = array(
    'fl' => array('PID'),
  );
  $query = "$qualifier:$user_name";
  $qp = new IslandoraSolrQueryProcessor();
  $qp->buildAndExecuteQuery($query, $params);
  try {
    $results = $qp->islandoraSolrResult['response']['objects'];
  }
  catch (Exception $e) {
    watchdog_exception('UPEI Roblib Orcid', $e, 'Error searching for user id.', array(), WATCHDOG_ERROR);
  }
  $pid = NULL;
  if (isset($results)) {
    $record = reset($results);
    $pid = $record['PID'];
  }
  return $pid;
}
