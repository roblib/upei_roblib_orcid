<?php

/**
 * @file
 * Hooks and callbacks for this module.
 */

define('UPEI_ROBLIB_ORCID_BLOCK', 'upei_roblib_orcid_block');
define('UPEI_ROBLIB_ORCID_CALLBACK_URI', 'islandora/orcid/response');

/**
 * Implements hook_menu().
 */
function upei_roblib_orcid_menu() {
  $items = array();

  $items['admin/islandora/orcid'] = array(
    'title' => 'ORCID',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('upei_roblib_orcid_admin_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/upei_roblib_orcid.admin.form.inc',
  );

  $items[UPEI_ROBLIB_ORCID_CALLBACK_URI] = array(
    'title' => 'ORCID',
    'page callback' => 'upei_roblib_orcid_response',
    'page arguments' => array(3),
    'access callback' => 'upei_roblib_orcid_response_access',
    'type' => MENU_LOCAL_TASK,
    'file' => 'includes/upei_roblib_orcid.response.inc',
  );

  return $items;
}

/**
 * Implements hook_access
 *
 * @return bool
 */
function upei_roblib_orcid_response_access() {
  $pid = upei_roblib_orcid_get_user_entity();
  $user_object = islandora_object_load($pid);
 return islandora_user_access($user_object, array(ISLANDORA_METADATA_EDIT));
}


function upei_roblib_orcid_create_or_connect_form($form, &$form_state, $object_id = NULL) {
  $form['#prefix'] = '<div id="upei-roblib-orcid-form">';
  $form['#suffix'] = '</div>';
  $object = islandora_object_load($object_id);
  $mads_xml = empty($object['MADS']->content) ? '' : $object['MADS']->content;
  $can_connect = upei_roblib_orcid_needs_orcid_id($mads_xml);
  $form['needs_orcid_id'] = array(
    '#type' => 'hidden',
    '#default_value' => $can_connect,
  );
  $form['start_message'] = array(
    '#type' => 'item',
    '#markup' => variable_get('upei_roblib_orcid_start_message'),
    '#attributes' => array('class' => array('upei-roblib-orcid-start-message')),
    '#states' => array(
      'visible' => array(
        ':input[name="needs_orcid_id"]' => array('value' => '1'),
      ),
    ),
  );
  $form['connect_button'] = array(
    '#type' => 'submit',
    '#value' => 'Create or connect your ORCID iD',
    '#attributes' => array('class' => array('upei-roblib-orcid-connect-button')),
    '#states' => array(
      'visible' => array(
        ':input[name="needs_orcid_id"]' => array('value' => '1'),
      ),
    ),
  );
  return $form;
}

/**
 * Checks to see if this Object can have an ORCID iD added to it.
 *
 * @param string $mads_xml
 *   The objects existing MADS xml as a string.
 *
 * @return bool
 *   Returns TRUE if we can add an ORCID iD to this object, FALSE otherwise.
 */
function upei_roblib_orcid_needs_orcid_id($mads_xml) {
  if(empty($mads_xml)) {
    // MADS does not exist we won't be able to add an orcid iD.
    return FALSE;
  }
  $xml = new DOMDocument();
  $test = $xml->loadXML($mads_xml);
  if (empty($test)) {
    //problem parsing mads we won't be able to add an id
    return FALSE;
  }
  $query = "//mads:identifier[@type='orcid']";
  $xpath = new DOMXPath($xml);
  $xpath->registerNamespace('mads', 'http://www.loc.gov/mads/v2');
  $results = $xpath->query($query, $xml);
  $found = (bool) $results->length;
  return !$found;
}

function upei_roblib_orcid_create_or_connect_form_submit() {
  $path = variable_get('upei_roblib_orcid_oauth_auth_endpoint');
  $client_id = variable_get('upei_roblib_orcid_oauth_client_id');
  $redirect_url = url(NULL, array('absolute' => TRUE)) . UPEI_ROBLIB_ORCID_CALLBACK_URI . '/';
  $options = array(
    'query' => array(
      'client_id' => $client_id,
      'response_type' => 'code',
      'scope' => '/authenticate',
      'redirect_uri' => $redirect_url,
    ),
    'absolute' => TRUE,
  );
  $url = url($path, $options);
  drupal_goto($url);
}

/**
 * Implements hook_block_info().
 */
function upei_roblib_orcid_block_info() {
  $blocks[UPEI_ROBLIB_ORCID_BLOCK] = array(
    'info' => t('Islandora Orcid Integration'),
  );
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function upei_roblib_orcid_block_view($delta = '') {
  $block = array();
  switch ($delta) {
    case UPEI_ROBLIB_ORCID_BLOCK:
      // Create your block content here
      $block['subject'] = t('Islandora Orcid Integration');
      $user_pid = upei_roblib_orcid_get_user_entity();
      $form = drupal_get_form('upei_roblib_orcid_create_or_connect_form', $user_pid);
      $block['content'] = $form;
      break;
  }
  return $block;
}


/**
 * Searches for an Islandora Person Entity object that matches the current
 * Drupal username.
 *
 * @return string
 *    The PID of the matching user if they exist, otherwise NULL.
 */
function upei_roblib_orcid_get_user_entity() {
  $qualifier = variable_get('upei_roblib_orcid_mads_user_field', 'MADS_u1_ms');
  global $user;
  module_load_include('inc', 'islandora_solr', 'includes/utilities');
  // Currently scholar stores the users username in the u1 field not the id
  $user_name = islandora_solr_lesser_escape($user->name);
  $params = array(
    'fl' => array('PID'),
  );
  $query = "$qualifier:$user_name";
  $qp = new IslandoraSolrQueryProcessor();
  $qp->buildAndExecuteQuery($query, $params);
  try {
    $results = $qp->islandoraSolrResult['response']['objects'];
  } catch (Exception $e) {
    watchdog_exception('UPEI Roblib Orcid', $e, 'Got an exception while searching for user.', array(), WATCHDOG_ERROR);
  }
  $pid = NULL;
  if (isset($results)) {
    $record = reset($results);
    $pid = $record['PID'];
  }
  return $pid;
}
